name: Deploy with Docker

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/euizzang8001/inthon_back  # Use your Docker Hub username and repository name
  VERSION: ${{ github.sha }}
  NAME: myproject
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_SERVER: ${{ secrets.DB_SERVER }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DEV_ENV: ${{ secrets.DEV_ENV }}
  PYTHONPATH : ${{secrets.PYTHONPATH}}

  S3_BUCKET_NAME : ${{secrets.S3_BUCKET_NAME}}

  JWT_SECRET_KEY : ${{secrets.JWT_SECRET_KEY}}
  GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
  
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Pull and run Docker container
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8000:8000 --name ${{ env.NAME }} --restart always \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_SERVER=${{ secrets.DB_SERVER }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DEV_ENV=${{ secrets.DEV_ENV }} \
            -e PYTHONPATH=${{ secrets.PYTHONPATH }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            ${{ env.DOCKER_IMAGE }}:latest
